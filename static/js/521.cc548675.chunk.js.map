{"version":3,"file":"static/js/521.cc548675.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/Contact-form/Contact-form.module.css?7698","components/Contact-form/Contact-form.jsx","webpack://react-homework-template/./src/components/Contact-list/Contacts-list.module.css?25cf","components/Contact-list/Contacts-list.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import React from 'react';\nimport propTypes from 'prop-types';\nimport css from './Section.module.css';\n// ? // Компонент секції в який огортаються інші компоненти, та який приймає потрібний тайтл ;\nconst Section = ({ title = 'Section title', children }) => (\n  <section className={css.section}>\n    <h2 className={css.title}>{title}</h2>\n    {children}\n  </section>\n);\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.node,\n};\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contact-form_title__JNC9Y\",\"label\":\"Contact-form_label__StaGj\",\"input\":\"Contact-form_input__9JCbP\",\"button\":\"Contact-form_button__Gw8he\"};","import React from 'react';\nimport css from './Contact-form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk, selectUserContacts } from 'redux/contactsReducer';\nconst ContactForm = () => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const contactData = {\n      name: form.elements.contactName.value,\n      number: form.elements.contactNumber.value,\n    };\n    if (contacts.find(contact => contact.name === contactData.name)) {\n      alert(`${contactData.name} is already in contacts!`);\n      return;\n    }\n    dispatch(addContactThunk(contactData));\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={css.label}>\n        <p className={css.title}>Name: </p>\n        <input\n          className={css.input}\n          maxLength={17}\n          type=\"text\"\n          name=\"contactName\"\n          required\n        ></input>\n      </label>\n      <label className={css.label}>\n        <p className={css.title}>Number: </p>\n        <input\n          className={css.input}\n          maxLength={22}\n          type=\"tel\"\n          name=\"contactNumber\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts-list_list__fj7Vb\",\"list_item\":\"Contacts-list_list_item__wO36j\",\"contact_wrap\":\"Contacts-list_contact_wrap__rhmKU\",\"button\":\"Contacts-list_button__QCHQ6\"};","import React from 'react';\nimport css from './Contacts-list.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk, selectUserContacts } from 'redux/contactsReducer';\nconst Contactslist = () => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n  return (\n    <div>\n      <ul className={css.list}>\n        {contacts.map(contact => (\n          <li className={css.list_item} key={contact.id}>\n            <h3 className={css.contact_wrap}>\n              <span>Name: {contact.name}</span>\n              <span>{contact.number}</span>\n            </h3>\n            <button\n              className={css.button}\n              onClick={() => handleDeleteContact(contact.id)}\n              aria-label=\"Delete contact\"\n            >\n              &times;\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Contactslist;\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"Notification_notification__SfISU\"};","import React from 'react';\nimport propTypes from 'prop-types';\nimport css from './Notification.module.css';\n// ? // Компонент нотифікацій якщо контактів ще немає ;\nconst Notification = ({ message = 'There is no contacts', children }) => (\n  <div>\n    <h4 className={css.notification}>{message}</h4>\n    {children}\n  </div>\n);\nNotification.propTypes = {\n  message: propTypes.string.isRequired,\n};\nexport default Notification;\n","import ContactForm from 'components/Contact-form/Contact-form';\nimport Contactslist from 'components/Contact-list/Contacts-list';\nimport Notification from 'components/Notification/Notification';\nimport Section from 'components/Section/Section';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsAuthed } from 'redux/authReducer';\nimport {\n  requestContactsThunk,\n  selectContactsError,\n  selectIsContactsLoading,\n  selectUserContacts,\n} from 'redux/contactsReducer';\nconst ContactsPage = () => {\n  const isAuthed = useSelector(selectIsAuthed);\n  const isLoading = useSelector(selectIsContactsLoading);\n  const contacts = useSelector(selectUserContacts);\n  const error = useSelector(selectContactsError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isAuthed) return;\n    dispatch(requestContactsThunk());\n  }, [dispatch, isAuthed]);\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && error ? (\n          <Notification message=\"Oops! Something went wrong!\">\n            <p>Error message: {error}</p>\n          </Notification>\n        ) : (\n          Array.isArray(contacts) && contacts.length > 0 && <Contactslist />\n        )}\n        {!isLoading && contacts.length === 0 && (\n          <Notification message=\"There is no contacts jet!\"></Notification>\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_ref","_ref$title","title","children","_jsxs","className","css","_jsx","contacts","useSelector","selectUserContacts","dispatch","useDispatch","onSubmit","event","preventDefault","form","currentTarget","contactData","name","elements","contactName","value","number","contactNumber","find","contact","alert","concat","addContactThunk","maxLength","type","required","map","onClick","contactId","id","deleteContactThunk","_ref$message","message","isAuthed","selectIsAuthed","isLoading","selectIsContactsLoading","error","selectContactsError","useEffect","requestContactsThunk","Section","ContactForm","Notification","Array","isArray","length","Contactslist"],"sourceRoot":""}